/**
 * @fileoverview gRPC-Web generated client stub for io.arthas.api
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.1
// 	protoc              v3.19.1
// source: ArthasServices.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.io = {};
proto.io.arthas = {};
proto.io.arthas.api = require('./ArthasServices_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.ObjectServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.ObjectServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.io.arthas.api.ObjectQuery,
 *   !proto.io.arthas.api.ObjectQueryResult>}
 */
const methodDescriptor_ObjectService_query = new grpc.web.MethodDescriptor(
  '/io.arthas.api.ObjectService/query',
  grpc.web.MethodType.UNARY,
  proto.io.arthas.api.ObjectQuery,
  proto.io.arthas.api.ObjectQueryResult,
  /**
   * @param {!proto.io.arthas.api.ObjectQuery} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.io.arthas.api.ObjectQueryResult.deserializeBinary
);


/**
 * @param {!proto.io.arthas.api.ObjectQuery} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.io.arthas.api.ObjectQueryResult)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ObjectQueryResult>|undefined}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.ObjectServiceClient.prototype.query =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/io.arthas.api.ObjectService/query',
      request,
      metadata || {},
      methodDescriptor_ObjectService_query,
      callback);
};


/**
 * @param {!proto.io.arthas.api.ObjectQuery} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.io.arthas.api.ObjectQueryResult>}
 *     Promise that resolves to the response
 */
proto.io.arthas.api.ObjectServicePromiseClient.prototype.query =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/io.arthas.api.ObjectService/query',
      request,
      metadata || {},
      methodDescriptor_ObjectService_query);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.SystemPropertyClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.SystemPropertyPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.io.arthas.api.ResponseBody>}
 */
const methodDescriptor_SystemProperty_get = new grpc.web.MethodDescriptor(
  '/io.arthas.api.SystemProperty/get',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.io.arthas.api.ResponseBody,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.io.arthas.api.ResponseBody.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.io.arthas.api.ResponseBody)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ResponseBody>|undefined}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.SystemPropertyClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/io.arthas.api.SystemProperty/get',
      request,
      metadata || {},
      methodDescriptor_SystemProperty_get,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.io.arthas.api.ResponseBody>}
 *     Promise that resolves to the response
 */
proto.io.arthas.api.SystemPropertyPromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/io.arthas.api.SystemProperty/get',
      request,
      metadata || {},
      methodDescriptor_SystemProperty_get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.io.arthas.api.StringKey,
 *   !proto.io.arthas.api.ResponseBody>}
 */
const methodDescriptor_SystemProperty_getByKey = new grpc.web.MethodDescriptor(
  '/io.arthas.api.SystemProperty/getByKey',
  grpc.web.MethodType.UNARY,
  proto.io.arthas.api.StringKey,
  proto.io.arthas.api.ResponseBody,
  /**
   * @param {!proto.io.arthas.api.StringKey} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.io.arthas.api.ResponseBody.deserializeBinary
);


/**
 * @param {!proto.io.arthas.api.StringKey} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.io.arthas.api.ResponseBody)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ResponseBody>|undefined}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.SystemPropertyClient.prototype.getByKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/io.arthas.api.SystemProperty/getByKey',
      request,
      metadata || {},
      methodDescriptor_SystemProperty_getByKey,
      callback);
};


/**
 * @param {!proto.io.arthas.api.StringKey} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.io.arthas.api.ResponseBody>}
 *     Promise that resolves to the response
 */
proto.io.arthas.api.SystemPropertyPromiseClient.prototype.getByKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/io.arthas.api.SystemProperty/getByKey',
      request,
      metadata || {},
      methodDescriptor_SystemProperty_getByKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.io.arthas.api.StringStringMapValue,
 *   !proto.io.arthas.api.ResponseBody>}
 */
const methodDescriptor_SystemProperty_update = new grpc.web.MethodDescriptor(
  '/io.arthas.api.SystemProperty/update',
  grpc.web.MethodType.UNARY,
  proto.io.arthas.api.StringStringMapValue,
  proto.io.arthas.api.ResponseBody,
  /**
   * @param {!proto.io.arthas.api.StringStringMapValue} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.io.arthas.api.ResponseBody.deserializeBinary
);


/**
 * @param {!proto.io.arthas.api.StringStringMapValue} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.io.arthas.api.ResponseBody)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ResponseBody>|undefined}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.SystemPropertyClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/io.arthas.api.SystemProperty/update',
      request,
      metadata || {},
      methodDescriptor_SystemProperty_update,
      callback);
};


/**
 * @param {!proto.io.arthas.api.StringStringMapValue} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.io.arthas.api.ResponseBody>}
 *     Promise that resolves to the response
 */
proto.io.arthas.api.SystemPropertyPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/io.arthas.api.SystemProperty/update',
      request,
      metadata || {},
      methodDescriptor_SystemProperty_update);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.PwdClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.PwdPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.io.arthas.api.ResponseBody>}
 */
const methodDescriptor_Pwd_pwd = new grpc.web.MethodDescriptor(
  '/io.arthas.api.Pwd/pwd',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.io.arthas.api.ResponseBody,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.io.arthas.api.ResponseBody.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.io.arthas.api.ResponseBody)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ResponseBody>|undefined}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.PwdClient.prototype.pwd =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/io.arthas.api.Pwd/pwd',
      request,
      metadata || {},
      methodDescriptor_Pwd_pwd,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.io.arthas.api.ResponseBody>}
 *     Promise that resolves to the response
 */
proto.io.arthas.api.PwdPromiseClient.prototype.pwd =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/io.arthas.api.Pwd/pwd',
      request,
      metadata || {},
      methodDescriptor_Pwd_pwd);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.WatchClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.io.arthas.api.WatchPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.io.arthas.api.WatchRequest,
 *   !proto.io.arthas.api.ResponseBody>}
 */
const methodDescriptor_Watch_watch = new grpc.web.MethodDescriptor(
  '/io.arthas.api.Watch/watch',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.io.arthas.api.WatchRequest,
  proto.io.arthas.api.ResponseBody,
  /**
   * @param {!proto.io.arthas.api.WatchRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.io.arthas.api.ResponseBody.deserializeBinary
);


/**
 * @param {!proto.io.arthas.api.WatchRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ResponseBody>}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.WatchClient.prototype.watch =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/io.arthas.api.Watch/watch',
      request,
      metadata || {},
      methodDescriptor_Watch_watch);
};


/**
 * @param {!proto.io.arthas.api.WatchRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.io.arthas.api.ResponseBody>}
 *     The XHR Node Readable Stream
 */
proto.io.arthas.api.WatchPromiseClient.prototype.watch =
    function(request, metadata) {
  return this.client_.serverStreaming(this.hostname_ +
      '/io.arthas.api.Watch/watch',
      request,
      metadata || {},
      methodDescriptor_Watch_watch);
};


module.exports = proto.io.arthas.api;

